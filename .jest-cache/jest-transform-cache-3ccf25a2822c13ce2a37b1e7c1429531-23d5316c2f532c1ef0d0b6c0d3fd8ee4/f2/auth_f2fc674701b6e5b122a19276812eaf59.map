{"file":"C:\\Users\\Bilur\\Documents\\Development\\Next\\soryck-access\\src\\lib\\auth.ts","mappings":"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","names":[],"sources":["C:\\Users\\Bilur\\Documents\\Development\\Next\\soryck-access\\src\\lib\\auth.ts"],"sourcesContent":["import { auth } from '@clerk/nextjs/server'\r\nimport { prisma } from '@/lib/prisma'\r\nimport { UserRole } from '@prisma/client'\r\nimport { hasRole, canOrganizeEvents, canAccessAdmin } from '@/lib/roles'\r\nimport { syncUserFromClerk } from '@/lib/sync-user'\r\nimport { CacheService } from '@/lib/redis'\r\n\r\nexport async function getCurrentUser() {\r\n  const { userId } = await auth()\r\n  \r\n  if (!userId) {\r\n    return null\r\n  }\r\n\r\n  try {\r\n    const cache = CacheService.getInstance()\r\n\r\n    \r\n    const cachedUser = await cache.getUserFullData(userId)\r\n    if (cachedUser) {\r\n      \r\n      \r\n      const user = await prisma.user.findUnique({\r\n        where: {\r\n          clerkId: userId\r\n        }\r\n      })\r\n      \r\n      if (user) {\r\n        return user\r\n      }\r\n    }\r\n\r\n    let user = await prisma.user.findUnique({\r\n      where: {\r\n        clerkId: userId\r\n      }\r\n    })\r\n\r\n    if (!user) {\r\n      console.log(`Usuario ${userId} no encontrado en BD, sincronizando desde Clerk...`)\r\n      try {\r\n        user = await syncUserFromClerk(userId)\r\n      } catch (syncError) {\r\n        console.error('Error al sincronizar usuario desde Clerk:', syncError)\r\n        return null\r\n      }\r\n    }\r\n\r\n    \r\n    if (user) {\r\n      const userData = {\r\n        id: user.id,\r\n        clerkId: user.clerkId,\r\n        email: user.email,\r\n        firstName: user.firstName || undefined,\r\n        lastName: user.lastName || undefined,\r\n        role: user.role,\r\n      }\r\n      \r\n      \r\n      await cache.setUserBatch(userId, userData)\r\n    }\r\n\r\n    return user\r\n  } catch (error) {\r\n    console.error('Error fetching user:', error)\r\n    return null\r\n  }\r\n}\r\n\r\n\r\nexport async function getCurrentUserRole() {\r\n  const { userId } = await auth()\r\n  \r\n  if (!userId) {\r\n    return null\r\n  }\r\n\r\n  try {\r\n    const cache = CacheService.getInstance()\r\n\r\n    \r\n    const cachedRole = await cache.getUserRole(userId)\r\n    if (cachedRole) {\r\n      return cachedRole as UserRole\r\n    }\r\n\r\n    \r\n    const user = await prisma.user.findUnique({\r\n      where: { clerkId: userId },\r\n      select: { role: true, id: true }\r\n    })\r\n\r\n    if (user) {\r\n      \r\n      await cache.setUserRole(userId, user.role)\r\n      return user.role\r\n    }\r\n\r\n    return null\r\n  } catch (error) {\r\n    console.error('Error fetching user role:', error)\r\n    return null\r\n  }\r\n}\r\n\r\nexport async function requireAuth() {\r\n  const user = await getCurrentUser()\r\n  \r\n  if (!user) {\r\n    throw new Error('Usuario no autenticado')\r\n  }\r\n\r\n  return user\r\n}\r\n\r\nexport async function requireRole(requiredRole: UserRole) {\r\n  const user = await requireAuth()\r\n  \r\n  if (!hasRole(user.role, requiredRole)) {\r\n    throw new Error(`Acceso denegado. Se requiere rol: ${requiredRole}`)\r\n  }\r\n\r\n  return user\r\n}\r\n\r\nexport async function requireOrganizer() {\r\n  const user = await requireAuth()\r\n  \r\n  if (!canOrganizeEvents(user.role)) {\r\n    throw new Error('Acceso denegado. Solo organizadores y administradores pueden realizar esta acción')\r\n  }\r\n\r\n  return user\r\n}\r\n\r\nexport async function requireAdmin() {\r\n  const user = await requireAuth()\r\n  \r\n  if (!canAccessAdmin(user.role)) {\r\n    throw new Error('Acceso denegado. Solo administradores pueden realizar esta acción')\r\n  }\r\n\r\n  return user\r\n}\r\n\r\nexport async function canAccessEvent(eventId: string) {\r\n  const user = await requireAuth()\r\n  \r\n  if (canAccessAdmin(user.role)) {\r\n    return { user, canAccess: true, isOwner: false, isAdmin: true }\r\n  }\r\n\r\n  const event = await prisma.event.findUnique({\r\n    where: { id: eventId },\r\n    select: { organizerId: true }\r\n  })\r\n\r\n  if (!event) {\r\n    throw new Error('Evento no encontrado')\r\n  }\r\n\r\n  const isOwner = event.organizerId === user.id\r\n  const canAccess = isOwner || canAccessAdmin(user.role)\r\n\r\n  return { user, canAccess, isOwner, isAdmin: false }\r\n}\r\n\r\nexport async function checkRoutePermissions(route: string) {\r\n  const user = await getCurrentUser()\r\n\r\n  if (!user) {\r\n    return { hasAccess: false, redirectTo: '/sign-in' }\r\n  }\r\n\r\n  const organizerRoutes = ['/events/create', '/events/manage', '/dashboard/events', '/dashboard/events/new']\r\n  if (organizerRoutes.some(r => route.startsWith(r))) {\r\n    if (!canOrganizeEvents(user.role)) {\r\n      return { hasAccess: false, redirectTo: '/unauthorized' }\r\n    }\r\n  }\r\n\r\n  const adminRoutes = ['/admin']\r\n  if (adminRoutes.some(r => route.startsWith(r))) {\r\n    if (!canAccessAdmin(user.role)) {\r\n      return { hasAccess: false, redirectTo: '/unauthorized' }\r\n    }\r\n  }\r\n\r\n  return { hasAccess: true }\r\n}"],"version":3}