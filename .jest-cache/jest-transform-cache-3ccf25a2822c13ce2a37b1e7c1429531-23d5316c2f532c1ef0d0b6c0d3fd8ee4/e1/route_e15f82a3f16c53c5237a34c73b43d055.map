{"file":"C:\\Users\\Bilur\\Documents\\Development\\Next\\soryck-access\\src\\app\\api\\payments\\create\\route.ts","mappings":"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","names":[],"sources":["C:\\Users\\Bilur\\Documents\\Development\\Next\\soryck-access\\src\\app\\api\\payments\\create\\route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from \"next/server\";\r\nimport { requireAuth } from \"@/lib/auth\";\r\nimport { prisma } from \"@/lib/prisma\";\r\nimport { webpayPlus } from \"@/lib/transbank\";\r\nimport { generateUniqueQRCode } from \"@/lib/qr\";\r\nimport { calculatePriceBreakdown, calculatePriceBreakdownWithDiscount } from \"@/lib/commission\";\r\nimport { DiscountCodeService } from \"@/lib/discount-codes\";\r\nimport { sendTicketEmail } from '@/lib/email';\r\nimport { z } from \"zod\";\r\nimport { Order, Event, User, TicketType } from \"@prisma/client\";\r\n\r\nconst createPaymentSchema = z.object({\r\n  ticketTypeId: z.string().min(1, \"Se requiere el tipo de ticket\"),\r\n  quantity: z.number().min(1, \"La cantidad debe ser al menos 1\").max(10, \"No puedes comprar m√°s de 10 tickets a la vez.\"),\r\n  promoCode: z.string().optional(), \r\n});\r\n\r\nfunction generateShortBuyOrder(prefix: string = \"SP\"): string {\r\n  const now = new Date();\r\n  const year = now.getFullYear().toString().slice(-2);\r\n  const month = String(now.getMonth() + 1).padStart(2, \"0\");\r\n  const day = String(now.getDate()).padStart(2, \"0\");\r\n  const hour = String(now.getHours()).padStart(2, \"0\");\r\n  const minute = String(now.getMinutes()).padStart(2, \"0\");\r\n  const second = String(now.getSeconds()).padStart(2, \"0\");\r\n  const ms = String(now.getMilliseconds()).padStart(3, \"0\").slice(0, 2);\r\n  const random = Math.random().toString(36).substr(2, 2).toUpperCase();\r\n  const buyOrder = `${prefix}${year}${month}${day}${hour}${minute}${second}${ms}${random}`;\r\n  return buyOrder.substring(0, 26);\r\n}\r\n\r\nfunction generateShortSessionId(prefix: string = \"sess\"): string {\r\n  const timestamp = Date.now().toString(36);\r\n  const random = Math.random().toString(36).substr(2, 4);\r\n  const sessionId = `${prefix}-${timestamp}-${random}`;\r\n  return sessionId.substring(0, 61);\r\n}\r\n\r\nexport async function POST(request: NextRequest) {\r\n  try {\r\n    console.log(\"=== INICIO DE CREACI√ìN DE PAGO CON PROMO CODES ===\");\r\n\r\n    const user = await requireAuth();\r\n    const body = await request.json();\r\n    const validation = createPaymentSchema.safeParse(body);\r\n\r\n    if (!validation.success) {\r\n      return NextResponse.json(\r\n        { error: \"Datos inv√°lidos\", details: validation.error.issues },\r\n        { status: 400 }\r\n      );\r\n    }\r\n\r\n    const { ticketTypeId, quantity, promoCode } = validation.data;\r\n\r\n    const ticketType = await prisma.ticketType.findUnique({\r\n      where: { id: ticketTypeId },\r\n      include: {\r\n        event: true\r\n      },\r\n    });\r\n\r\n    if (!ticketType || !ticketType.event.isPublished) {\r\n      return NextResponse.json(\r\n        { error: \"Tipo de entrada no encontrado o el evento no est√° publicado\" },\r\n        { status: 404 }\r\n      );\r\n    }\r\n\r\n    const event = ticketType.event;\r\n\r\n    const ticketsSoldForType = await prisma.ticket.count({\r\n      where: { ticketTypeId: ticketTypeId },\r\n    });\r\n\r\n    const ticketsGeneratedPerPurchase = ticketType.ticketsGenerated;\r\n    const capacityInTickets = ticketType.capacity * ticketsGeneratedPerPurchase;\r\n    const availableTickets = capacityInTickets - ticketsSoldForType;\r\n\r\n    if ((quantity * ticketsGeneratedPerPurchase) > availableTickets) {\r\n      return NextResponse.json(\r\n        { error: `No hay suficientes tickets disponibles. Solo quedan ${Math.floor(availableTickets / ticketsGeneratedPerPurchase)}.` },\r\n        { status: 400 }\r\n      );\r\n    }\r\n\r\n    let discountCodeValidation = null;\r\n    let finalPriceBreakdown = null;\r\n    \r\n    const basePrice = ticketType.price;\r\n    const baseTotalAmount = basePrice * quantity;\r\n\r\n    if (promoCode && promoCode.trim()) {\r\n      console.log(`[DISCOUNT] Validando c√≥digo de descuento: ${promoCode}`);\r\n      \r\n      discountCodeValidation = await DiscountCodeService.validateDiscountCode(\r\n        promoCode.trim(),\r\n        user.id,\r\n        ticketTypeId,\r\n        quantity\r\n      );\r\n\r\n      if (!discountCodeValidation.isValid) {\r\n        return NextResponse.json(\r\n          { error: discountCodeValidation.error },\r\n          { status: 400 }\r\n        );\r\n      }\r\n\r\n      console.log(`[DISCOUNT] ‚úÖ C√≥digo v√°lido (${discountCodeValidation.type}). Descuento: ${discountCodeValidation.discountAmount}`);\r\n      \r\n      \r\n      finalPriceBreakdown = calculatePriceBreakdownWithDiscount(\r\n        baseTotalAmount,\r\n        discountCodeValidation.discountAmount || 0,\r\n        event.currency\r\n      );\r\n      \r\n      finalPriceBreakdown.promoCode = discountCodeValidation.code;\r\n    } else {\r\n      finalPriceBreakdown = calculatePriceBreakdown(baseTotalAmount, event.currency);\r\n      finalPriceBreakdown.originalAmount = baseTotalAmount;\r\n      finalPriceBreakdown.discountAmount = 0;\r\n    }\r\n\r\n    const finalTotalAmount = finalPriceBreakdown.totalPrice;\r\n\r\n    console.log(`[PAYMENT] Resumen de precios:`, {\r\n      baseAmount: baseTotalAmount,\r\n      discountAmount: finalPriceBreakdown.discountAmount,\r\n      afterDiscount: finalPriceBreakdown.basePrice,\r\n      commission: finalPriceBreakdown.commission,\r\n      finalTotal: finalTotalAmount,\r\n      hasPromoCode: !!promoCode,\r\n      originalAmount: finalPriceBreakdown.originalAmount\r\n    });\r\n\r\n    console.log(`[WEBPAY] Monto que ser√° enviado a WebPay: $${finalTotalAmount} ${event.currency}`);\r\n\r\n    const orderNumber = generateShortBuyOrder(\"SP\");\r\n    const order = await prisma.order.create({\r\n      data: {\r\n        orderNumber,\r\n        totalAmount: finalTotalAmount,\r\n        baseAmount: finalPriceBreakdown.basePrice,\r\n        commissionAmount: finalPriceBreakdown.commission,\r\n        originalAmount: finalPriceBreakdown.originalAmount, \r\n        discountAmount: finalPriceBreakdown.discountAmount, \r\n        currency: event.currency,\r\n        quantity,\r\n        status: \"PENDING\",\r\n        userId: user.id,\r\n        eventId: event.id,\r\n      },\r\n    });\r\n\r\n    console.log(\"Orden creada:\", { \r\n      orderId: order.id, \r\n      total: finalTotalAmount,\r\n      discount: finalPriceBreakdown.discountAmount,\r\n      promoApplied: !!promoCode\r\n    });\r\n\r\n    \r\n    const isFree = finalTotalAmount === 0;\r\n    if (isFree) {\r\n      console.log(\"Entrada gratuita o con descuento del 100%, procesando directamente...\");\r\n      \r\n      \r\n      if (discountCodeValidation && discountCodeValidation.isValid) {\r\n        await DiscountCodeService.applyCodeUsage(\r\n          discountCodeValidation,\r\n          user.id,\r\n          order.id,\r\n          finalPriceBreakdown.originalAmount || 0,\r\n          finalTotalAmount\r\n        );\r\n      }\r\n      \r\n      return await handleAndGenerateTickets(order, event, user, ticketType);\r\n    }\r\n\r\n    \r\n    const sessionId = generateShortSessionId(\"sess\");\r\n    const returnUrl = `${process.env.NEXT_PUBLIC_APP_URL}/api/transbank/return`;\r\n\r\n    const transbankResponse = await webpayPlus.create(\r\n      order.orderNumber,\r\n      sessionId,\r\n      finalTotalAmount,\r\n      returnUrl\r\n    );\r\n\r\n    await prisma.payment.create({\r\n      data: {\r\n        orderId: order.id,\r\n        transactionId: sessionId,\r\n        token: transbankResponse.token,\r\n        amount: finalTotalAmount,\r\n        currency: event.currency,\r\n        status: \"PENDING\",\r\n      },\r\n    });\r\n\r\n    \r\n    if (discountCodeValidation && discountCodeValidation.isValid) {\r\n      \r\n      \r\n      console.log(`[DISCOUNT] C√≥digo ${promoCode} (${discountCodeValidation.type}) quedar√° pendiente para aplicar tras pago exitoso`);\r\n    }\r\n\r\n    return NextResponse.json({\r\n      success: true,\r\n      orderId: order.id,\r\n      paymentUrl: transbankResponse.url,\r\n      token: transbankResponse.token,\r\n      priceBreakdown: {\r\n        originalAmount: finalPriceBreakdown.originalAmount,\r\n        discountAmount: finalPriceBreakdown.discountAmount,\r\n        baseAmount: finalPriceBreakdown.basePrice,\r\n        commission: finalPriceBreakdown.commission,\r\n        totalAmount: finalTotalAmount,\r\n        promoCode: promoCode || null\r\n      }\r\n    });\r\n\r\n  } catch (error) {\r\n    console.error(\"=== ERROR GENERAL EN CREACI√ìN DE PAGO ===\", error);\r\n    return NextResponse.json(\r\n      {\r\n        error: \"Error interno del servidor\",\r\n        details: error instanceof Error ? error.message : \"Error desconocido\",\r\n      },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n\r\nasync function handleAndGenerateTickets(order: Order, event: Event, user: User, ticketType: TicketType) {\r\n  console.log(`Generando tickets para la orden ${order.orderNumber}`);\r\n\r\n  const timestamp = Date.now();\r\n  const ticketsData = [];\r\n  \r\n  const totalTicketsToGenerate = order.quantity * ticketType.ticketsGenerated;\r\n\r\n  for (let i = 0; i < totalTicketsToGenerate; i++) {\r\n    const qrCode = generateUniqueQRCode(event.id, user.id, timestamp, i);\r\n    ticketsData.push({\r\n      qrCode,\r\n      eventId: event.id,\r\n      userId: user.id,\r\n      orderId: order.id,\r\n      ticketTypeId: ticketType.id,\r\n    });\r\n  }\r\n\r\n  const transactionResult = await prisma.$transaction([\r\n    prisma.ticket.createMany({ data: ticketsData }),\r\n    prisma.order.update({\r\n      where: { id: order.id },\r\n      data: { status: \"PAID\" },\r\n      include: { tickets: true }\r\n    }),\r\n  ]);\r\n\r\n  const updatedOrder = transactionResult[1];\r\n  console.log(`${ticketsData.length} tickets generados.`);\r\n\r\n  const eventWithOrganizer = await prisma.event.findUnique({\r\n    where: { id: event.id },\r\n    include: { organizer: true }\r\n  });\r\n\r\n  if (eventWithOrganizer && user.firstName) {\r\n    await sendTicketEmail({\r\n      userEmail: user.email,\r\n      userName: user.firstName,\r\n      eventTitle: eventWithOrganizer.title,\r\n      eventDate: eventWithOrganizer.startDate.toISOString(),\r\n      eventLocation: eventWithOrganizer.location,\r\n      orderNumber: updatedOrder.id,\r\n      tickets: updatedOrder.tickets.map(ticket => ({\r\n        qrCode: ticket.qrCode!,\r\n        qrCodeImage: `data:image/png;base64,${ticket.qrCode}` \r\n      }))\r\n    });\r\n  }\r\n\r\n  return NextResponse.json({\r\n    success: true,\r\n    orderId: order.id,\r\n    isFree: true,\r\n    ticketsGenerated: totalTicketsToGenerate,\r\n  });\r\n}"],"version":3}