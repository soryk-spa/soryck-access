{"file":"C:\\Users\\Bilur\\Documents\\Development\\Next\\soryck-access\\src\\__tests__\\hooks\\usePromoCode.test.ts","mappings":"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","names":[],"sources":["C:\\Users\\Bilur\\Documents\\Development\\Next\\soryck-access\\src\\__tests__\\hooks\\usePromoCode.test.ts"],"sourcesContent":["import { renderHook, act } from '@testing-library/react';\r\nimport { toast } from 'sonner';\r\nimport {\r\n  usePromoCodeManagement,\r\n  usePromoCodeFilters,\r\n  usePromoCodeStats,\r\n  usePromoCodeSharing,\r\n} from '@/hooks/usePromoCode';\r\nimport type { PromoCode } from '@/types';\r\n\r\n// Mock toast\r\njest.mock('sonner');\r\nconst mockToast = toast as jest.Mocked<typeof toast>;\r\n\r\n// Mock fetch globally\r\nglobal.fetch = jest.fn();\r\nconst mockFetch = global.fetch as jest.MockedFunction<typeof fetch>;\r\n\r\n// Mock navigator clipboard\r\nObject.assign(navigator, {\r\n  clipboard: {\r\n    writeText: jest.fn().mockImplementation(() => Promise.resolve()),\r\n  },\r\n});\r\n\r\n// Mock PromoCode data\r\nconst mockPromoCodes: PromoCode[] = [\r\n  {\r\n    id: '1',\r\n    code: 'SUMMER2024',\r\n    name: 'Descuento de Verano',\r\n    description: 'Descuento especial para eventos de verano',\r\n    type: 'PERCENTAGE',\r\n    value: 20,\r\n    status: 'ACTIVE',\r\n    validFrom: '2024-01-01',\r\n    validUntil: '2024-12-31',\r\n    usageLimit: 100,\r\n    usedCount: 25,\r\n    usageLimitPerUser: 1,\r\n    minOrderAmount: 10000,\r\n    maxDiscountAmount: 50000,\r\n    currency: 'CLP',\r\n    createdAt: '2024-01-01',\r\n    updatedAt: '2024-01-01',\r\n    createdBy: 'user1',\r\n    eventId: null,\r\n    categoryId: null,\r\n    ticketTypeId: null,\r\n    _count: { usages: 25 },\r\n  },\r\n  {\r\n    id: '2',\r\n    code: 'FIXED10K',\r\n    name: 'Descuento Fijo',\r\n    description: 'Descuento de monto fijo',\r\n    type: 'FIXED_AMOUNT',\r\n    value: 10000,\r\n    status: 'INACTIVE',\r\n    validFrom: '2024-01-01',\r\n    validUntil: '2024-06-30',\r\n    usageLimit: 50,\r\n    usedCount: 50,\r\n    usageLimitPerUser: 2,\r\n    minOrderAmount: 20000,\r\n    maxDiscountAmount: 30000,\r\n    currency: 'CLP',\r\n    createdAt: '2024-01-01',\r\n    updatedAt: '2024-01-01',\r\n    createdBy: 'user1',\r\n    eventId: 'event1',\r\n    categoryId: null,\r\n    ticketTypeId: null,\r\n    _count: { usages: 50 },\r\n  },\r\n];\r\n\r\ndescribe('usePromoCodeManagement', () => {\r\n  beforeEach(() => {\r\n    jest.clearAllMocks();\r\n    mockFetch.mockClear();\r\n  });\r\n\r\n  it('inicializa con códigos promocionales', () => {\r\n    const { result } = renderHook(() => usePromoCodeManagement(mockPromoCodes));\r\n\r\n    expect(result.current.promoCodes).toEqual(mockPromoCodes);\r\n    expect(result.current.loadingStates).toEqual({});\r\n  });\r\n\r\n  it('activa un código promocional exitosamente', async () => {\r\n    mockFetch.mockResolvedValueOnce({\r\n      ok: true,\r\n      json: async () => ({ success: true }),\r\n    } as Response);\r\n\r\n    const { result } = renderHook(() => usePromoCodeManagement(mockPromoCodes));\r\n\r\n    await act(async () => {\r\n      await result.current.togglePromoCodeStatus(mockPromoCodes[1]);\r\n    });\r\n\r\n    expect(mockFetch).toHaveBeenCalledWith('/api/promo-codes/2/toggle-status', {\r\n      method: 'PATCH',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ status: 'ACTIVE' }),\r\n    });\r\n\r\n    expect(mockToast.success).toHaveBeenCalledWith(\r\n      'Código promocional activado exitosamente'\r\n    );\r\n\r\n    // Verificar que el estado local se actualizó\r\n    const updatedPromoCode = result.current.promoCodes.find(p => p.id === '2');\r\n    expect(updatedPromoCode?.status).toBe('ACTIVE');\r\n  });\r\n\r\n  it('maneja errores al cambiar estado', async () => {\r\n    mockFetch.mockResolvedValueOnce({\r\n      ok: false,\r\n      json: async () => ({ error: 'Error de servidor' }),\r\n    } as Response);\r\n\r\n    const { result } = renderHook(() => usePromoCodeManagement(mockPromoCodes));\r\n\r\n    await act(async () => {\r\n      await result.current.togglePromoCodeStatus(mockPromoCodes[0]);\r\n    });\r\n\r\n    expect(mockToast.error).toHaveBeenCalledWith('Error de servidor');\r\n  });\r\n\r\n  it('copia código al portapapeles', async () => {\r\n    const { result } = renderHook(() => usePromoCodeManagement(mockPromoCodes));\r\n\r\n    await act(async () => {\r\n      result.current.copyToClipboard('SUMMER2024');\r\n    });\r\n\r\n    expect(navigator.clipboard.writeText).toHaveBeenCalledWith('SUMMER2024');\r\n    expect(mockToast.success).toHaveBeenCalledWith('Código copiado al portapapeles');\r\n  });\r\n});\r\n\r\ndescribe('usePromoCodeFilters', () => {\r\n  it('filtra códigos por búsqueda', () => {\r\n    const { result } = renderHook(() => usePromoCodeFilters(mockPromoCodes));\r\n\r\n    act(() => {\r\n      result.current.updateFilter('search', 'SUMMER');\r\n    });\r\n\r\n    expect(result.current.filteredPromoCodes).toHaveLength(1);\r\n    expect(result.current.filteredPromoCodes[0].code).toBe('SUMMER2024');\r\n  });\r\n\r\n  it('filtra códigos por estado', () => {\r\n    const { result } = renderHook(() => usePromoCodeFilters(mockPromoCodes));\r\n\r\n    act(() => {\r\n      result.current.updateFilter('status', 'ACTIVE');\r\n    });\r\n\r\n    expect(result.current.filteredPromoCodes).toHaveLength(1);\r\n    expect(result.current.filteredPromoCodes[0].status).toBe('ACTIVE');\r\n  });\r\n\r\n  it('combina múltiples filtros', () => {\r\n    const { result } = renderHook(() => usePromoCodeFilters(mockPromoCodes));\r\n\r\n    act(() => {\r\n      result.current.updateFilter('status', 'INACTIVE');\r\n    });\r\n\r\n    expect(result.current.filteredPromoCodes).toHaveLength(1);\r\n    expect(result.current.filteredPromoCodes[0].code).toBe('FIXED10K');\r\n  });\r\n\r\n  it('limpia filtros correctamente', () => {\r\n    const { result } = renderHook(() => usePromoCodeFilters(mockPromoCodes));\r\n\r\n    act(() => {\r\n      result.current.updateFilter('status', 'ACTIVE');\r\n    });\r\n\r\n    expect(result.current.filteredPromoCodes).toHaveLength(1);\r\n\r\n    act(() => {\r\n      result.current.clearFilters();\r\n    });\r\n\r\n    expect(result.current.filteredPromoCodes).toHaveLength(2);\r\n    expect(result.current.filters).toEqual({ search: '', status: 'all' });\r\n  });\r\n});\r\n\r\ndescribe('usePromoCodeStats', () => {\r\n  it('calcula estadísticas correctamente', () => {\r\n    const { result } = renderHook(() => usePromoCodeStats(mockPromoCodes));\r\n\r\n    expect(result.current.total).toBe(2);\r\n    expect(result.current.active).toBe(1);\r\n    expect(result.current.inactive).toBe(1);\r\n    expect(result.current.expired).toBe(0);\r\n    expect(result.current.usedUp).toBe(0);\r\n    expect(result.current.totalUsages).toBe(75);\r\n    expect(result.current.activePercentage).toBe(50);\r\n    expect(result.current.usageRate).toBe(37.5);\r\n  });\r\n\r\n  it('calcula estadísticas con códigos expirados', () => {\r\n    const expiredPromoCodes: PromoCode[] = [\r\n      ...mockPromoCodes,\r\n      {\r\n        ...mockPromoCodes[0],\r\n        id: '3',\r\n        code: 'EXPIRED',\r\n        status: 'EXPIRED',\r\n        validUntil: '2023-12-31',\r\n      },\r\n    ];\r\n\r\n    const { result } = renderHook(() => usePromoCodeStats(expiredPromoCodes));\r\n\r\n    expect(result.current.total).toBe(3);\r\n    expect(result.current.active).toBe(1);\r\n    expect(result.current.inactive).toBe(1);\r\n    expect(result.current.expired).toBe(1);\r\n  });\r\n\r\n  it('maneja códigos sin límite de uso', () => {\r\n    const codesWithoutLimit: PromoCode[] = [\r\n      {\r\n        ...mockPromoCodes[0],\r\n        usageLimit: undefined,\r\n        usedCount: 10,\r\n      },\r\n    ];\r\n\r\n    const { result } = renderHook(() => usePromoCodeStats(codesWithoutLimit));\r\n\r\n    expect(result.current.total).toBe(1);\r\n    expect(result.current.totalUsages).toBe(10);\r\n  });\r\n});\r\n\r\ndescribe('usePromoCodeSharing', () => {\r\n  beforeEach(() => {\r\n    jest.clearAllMocks();\r\n    // Mock navigator.share\r\n    Object.assign(navigator, {\r\n      share: jest.fn().mockImplementation(() => Promise.resolve()),\r\n    });\r\n  });\r\n\r\n  it('comparte código promocional con Web Share API', async () => {\r\n    const { result } = renderHook(() => usePromoCodeSharing());\r\n    const formatDiscount = (type: string, value: number) => \r\n      type === 'PERCENTAGE' ? `${value}%` : `$${value}`;\r\n\r\n    await act(async () => {\r\n      result.current.sharePromoCode(mockPromoCodes[0], formatDiscount);\r\n    });\r\n\r\n    expect(navigator.share).toHaveBeenCalledWith({\r\n      title: 'Código promocional: Descuento de Verano',\r\n      text: '🎫 ¡Descuento especial! Usa el código SUMMER2024 y obtén 20% en tu próxima compra.',\r\n    });\r\n  });\r\n\r\n  it('copia al portapapeles cuando no hay Web Share API', async () => {\r\n    // Simular que no hay Web Share API\r\n    Object.assign(navigator, { share: undefined });\r\n\r\n    const { result } = renderHook(() => usePromoCodeSharing());\r\n    const formatDiscount = (type: string, value: number) => \r\n      type === 'PERCENTAGE' ? `${value}%` : `$${value}`;\r\n\r\n    await act(async () => {\r\n      result.current.sharePromoCode(mockPromoCodes[0], formatDiscount);\r\n    });\r\n\r\n    expect(navigator.clipboard.writeText).toHaveBeenCalledWith(\r\n      '🎫 ¡Descuento especial! Usa el código SUMMER2024 y obtén 20% en tu próxima compra.'\r\n    );\r\n    expect(mockToast.success).toHaveBeenCalledWith(\r\n      'Texto de promoción copiado al portapapeles'\r\n    );\r\n  });\r\n\r\n  it('exporta códigos promocionales a CSV', () => {\r\n    const { result } = renderHook(() => usePromoCodeSharing());\r\n\r\n    // Mock para crear y hacer click en link de descarga\r\n    const mockLink = {\r\n      setAttribute: jest.fn(),\r\n      click: jest.fn(),\r\n      style: { visibility: '' },\r\n    };\r\n    const mockCreateElement = jest.spyOn(document, 'createElement').mockReturnValue(mockLink as unknown as HTMLAnchorElement);\r\n    const mockAppendChild = jest.spyOn(document.body, 'appendChild').mockImplementation();\r\n    const mockRemoveChild = jest.spyOn(document.body, 'removeChild').mockImplementation();\r\n    const mockCreateObjectURL = jest.spyOn(URL, 'createObjectURL').mockReturnValue('blob:mock-url');\r\n\r\n    act(() => {\r\n      result.current.exportPromoCodes(mockPromoCodes);\r\n    });\r\n\r\n    expect(mockCreateElement).toHaveBeenCalledWith('a');\r\n    expect(mockToast.success).toHaveBeenCalledWith(\r\n      'Códigos promocionales exportados exitosamente'\r\n    );\r\n\r\n    // Limpiar mocks\r\n    mockCreateElement.mockRestore();\r\n    mockAppendChild.mockRestore();\r\n    mockRemoveChild.mockRestore();\r\n    mockCreateObjectURL.mockRestore();\r\n  });\r\n});\r\n"],"version":3}