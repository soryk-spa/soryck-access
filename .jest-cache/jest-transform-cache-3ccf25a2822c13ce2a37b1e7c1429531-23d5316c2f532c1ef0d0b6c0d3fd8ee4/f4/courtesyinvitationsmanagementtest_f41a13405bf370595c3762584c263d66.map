{"file":"C:\\Users\\Bilur\\Documents\\Development\\Next\\soryck-access\\src\\__tests__\\components\\courtesy-invitations-management.test.tsx","mappings":"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","names":[],"sources":["C:\\Users\\Bilur\\Documents\\Development\\Next\\soryck-access\\src\\__tests__\\components\\courtesy-invitations-management.test.tsx"],"sourcesContent":["/**\r\n * Tests para el componente CourtesyInvitationsManagement\r\n * @file components/courtesy-invitations-management.tsx\r\n */\r\n\r\nimport React from 'react';\r\nimport { render, screen, fireEvent, waitFor } from '@testing-library/react';\r\nimport { toast } from 'sonner';\r\nimport CourtesyInvitationsManagement from '../../components/courtesy-invitations-management';\r\n\r\n// Mock de Sonner Toast\r\njest.mock('sonner', () => ({\r\n  toast: {\r\n    error: jest.fn(),\r\n    success: jest.fn(),\r\n    warning: jest.fn(),\r\n  },\r\n}));\r\n\r\n// Mock de fetch global\r\nconst mockFetch = jest.fn();\r\nglobal.fetch = mockFetch;\r\n\r\n// Mock de window.URL.createObjectURL para exportar\r\nObject.defineProperty(window, 'URL', {\r\n  value: {\r\n    createObjectURL: jest.fn(() => 'mock-url'),\r\n    revokeObjectURL: jest.fn(),\r\n  },\r\n});\r\n\r\n// Mock de createElement para link de descarga\r\nconst mockCreateElement = jest.fn();\r\nconst mockClick = jest.fn();\r\nconst mockRemove = jest.fn();\r\n\r\nObject.defineProperty(document, 'createElement', {\r\n  value: mockCreateElement.mockReturnValue({\r\n    href: '',\r\n    download: '',\r\n    style: { display: '' },\r\n    click: mockClick,\r\n    remove: mockRemove,\r\n  }),\r\n});\r\n\r\nObject.defineProperty(document.body, 'appendChild', {\r\n  value: jest.fn(),\r\n});\r\n\r\ndescribe('CourtesyInvitationsManagement', () => {\r\n  const mockProps = {\r\n    eventId: 'event-123',\r\n    eventTitle: 'Test Event',\r\n  };\r\n\r\n  const mockInvitations = [\r\n    {\r\n      id: 'inv-1',\r\n      invitedEmail: 'test1@example.com',\r\n      invitedName: 'Test User 1',\r\n      status: 'PENDING' as const,\r\n      invitationCode: 'code123',\r\n      expiresAt: '2025-12-31T23:59:59Z',\r\n      createdAt: '2025-09-01T10:00:00Z',\r\n      ticket: null,\r\n      creator: {\r\n        firstName: 'John',\r\n        lastName: 'Doe',\r\n        email: 'john@test.com',\r\n      },\r\n    },\r\n    {\r\n      id: 'inv-2',\r\n      invitedEmail: 'test2@example.com',\r\n      invitedName: 'Test User 2',\r\n      status: 'SENT' as const,\r\n      invitationCode: 'code456',\r\n      expiresAt: '2025-12-31T23:59:59Z',\r\n      createdAt: '2025-09-01T11:00:00Z',\r\n      ticket: {\r\n        id: 'ticket-1',\r\n        qrCode: 'QR123',\r\n        isUsed: false,\r\n        usedAt: null,\r\n      },\r\n      creator: {\r\n        firstName: 'John',\r\n        lastName: 'Doe',\r\n        email: 'john@test.com',\r\n      },\r\n    },\r\n  ];\r\n\r\n  beforeEach(() => {\r\n    jest.clearAllMocks();\r\n    mockFetch.mockClear();\r\n  });\r\n\r\n  describe('Renderizado inicial', () => {\r\n    it('debería renderizar el título y elementos principales', async () => {\r\n      mockFetch.mockResolvedValueOnce({\r\n        ok: true,\r\n        json: async () => ({\r\n          event: { id: 'event-123', title: 'Test Event' },\r\n          invitations: [],\r\n        }),\r\n      });\r\n\r\n      render(<CourtesyInvitationsManagement {...mockProps} />);\r\n\r\n      expect(screen.getByText('Invitaciones de Cortesía')).toBeInTheDocument();\r\n      expect(screen.getByText('Agregar Invitación Individual')).toBeInTheDocument();\r\n      expect(screen.getByText('Invitación Masiva')).toBeInTheDocument();\r\n\r\n      await waitFor(() => {\r\n        expect(mockFetch).toHaveBeenCalledWith(`/api/events/${mockProps.eventId}/invitations`);\r\n      });\r\n    });\r\n\r\n    it('debería mostrar la tabla de invitaciones cuando hay datos', async () => {\r\n      mockFetch.mockResolvedValueOnce({\r\n        ok: true,\r\n        json: async () => ({\r\n          event: { id: 'event-123', title: 'Test Event' },\r\n          invitations: mockInvitations,\r\n        }),\r\n      });\r\n\r\n      render(<CourtesyInvitationsManagement {...mockProps} />);\r\n\r\n      await waitFor(() => {\r\n        expect(screen.getByText('test1@example.com')).toBeInTheDocument();\r\n        expect(screen.getByText('Test User 1')).toBeInTheDocument();\r\n        expect(screen.getByText('test2@example.com')).toBeInTheDocument();\r\n        expect(screen.getByText('Test User 2')).toBeInTheDocument();\r\n      });\r\n\r\n      expect(screen.getByText('PENDING')).toBeInTheDocument();\r\n      expect(screen.getByText('SENT')).toBeInTheDocument();\r\n    });\r\n\r\n    it('debería manejar errores al cargar invitaciones', async () => {\r\n      mockFetch.mockRejectedValueOnce(new Error('Network error'));\r\n\r\n      render(<CourtesyInvitationsManagement {...mockProps} />);\r\n\r\n      await waitFor(() => {\r\n        expect(toast.error).toHaveBeenCalledWith('Error al cargar las invitaciones');\r\n      });\r\n    });\r\n  });\r\n\r\n  describe('Invitación individual', () => {\r\n    beforeEach(() => {\r\n      mockFetch.mockResolvedValueOnce({\r\n        ok: true,\r\n        json: async () => ({\r\n          event: { id: 'event-123', title: 'Test Event' },\r\n          invitations: [],\r\n        }),\r\n      });\r\n    });\r\n\r\n    it('debería agregar una invitación individual exitosamente', async () => {\r\n      // Mock respuesta exitosa para crear invitación\r\n      mockFetch.mockResolvedValueOnce({\r\n        ok: true,\r\n        json: async () => ({\r\n          message: '1 invitación(es) creada(s) exitosamente',\r\n          invitations: [mockInvitations[0]],\r\n        }),\r\n      });\r\n\r\n      render(<CourtesyInvitationsManagement {...mockProps} />);\r\n\r\n      // Esperar a que cargue\r\n      await waitFor(() => {\r\n        expect(screen.getByLabelText('Email *')).toBeInTheDocument();\r\n      });\r\n\r\n      // Llenar formulario\r\n      const emailInput = screen.getByLabelText('Email *');\r\n      const nameInput = screen.getByLabelText('Nombre (opcional)');\r\n      \r\n      fireEvent.change(emailInput, { target: { value: 'new@example.com' } });\r\n      fireEvent.change(nameInput, { target: { value: 'New User' } });\r\n\r\n      // Enviar\r\n      fireEvent.click(screen.getByRole('button', { name: 'Agregar Invitación' }));\r\n\r\n      await waitFor(() => {\r\n        expect(mockFetch).toHaveBeenLastCalledWith(\r\n          `/api/events/${mockProps.eventId}/invitations`,\r\n          {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({\r\n              invitedEmail: 'new@example.com',\r\n              invitedName: 'New User',\r\n            }),\r\n          }\r\n        );\r\n        expect(toast.success).toHaveBeenCalledWith('Invitación creada exitosamente');\r\n      });\r\n    });\r\n\r\n    it('debería validar email requerido', async () => {\r\n      render(<CourtesyInvitationsManagement {...mockProps} />);\r\n\r\n      await waitFor(() => {\r\n        expect(screen.getByLabelText('Email *')).toBeInTheDocument();\r\n      });\r\n\r\n      // Intentar enviar sin email\r\n      fireEvent.click(screen.getByRole('button', { name: 'Agregar Invitación' }));\r\n\r\n      expect(toast.error).toHaveBeenCalledWith('El email es requerido');\r\n      expect(mockFetch).toHaveBeenCalledTimes(1); // Solo la carga inicial\r\n    });\r\n\r\n    it('debería manejar errores al crear invitación individual', async () => {\r\n      // Mock error en creación\r\n      mockFetch.mockResolvedValueOnce({\r\n        ok: false,\r\n        json: async () => ({ error: 'Email ya existe' }),\r\n      });\r\n\r\n      render(<CourtesyInvitationsManagement {...mockProps} />);\r\n\r\n      await waitFor(() => {\r\n        expect(screen.getByLabelText('Email *')).toBeInTheDocument();\r\n      });\r\n\r\n      const emailInput = screen.getByLabelText('Email *');\r\n      fireEvent.change(emailInput, { target: { value: 'existing@example.com' } });\r\n      fireEvent.click(screen.getByRole('button', { name: 'Agregar Invitación' }));\r\n\r\n      await waitFor(() => {\r\n        expect(toast.error).toHaveBeenCalledWith('Email ya existe');\r\n      });\r\n    });\r\n  });\r\n\r\n  describe('Invitaciones masivas', () => {\r\n    beforeEach(() => {\r\n      mockFetch.mockResolvedValueOnce({\r\n        ok: true,\r\n        json: async () => ({\r\n          event: { id: 'event-123', title: 'Test Event' },\r\n          invitations: [],\r\n        }),\r\n      });\r\n    });\r\n\r\n    it('debería abrir el modal de invitaciones masivas', async () => {\r\n      render(<CourtesyInvitationsManagement {...mockProps} />);\r\n\r\n      await waitFor(() => {\r\n        expect(screen.getByText('Invitación Masiva')).toBeInTheDocument();\r\n      });\r\n\r\n      fireEvent.click(screen.getByRole('button', { name: /Invitación Masiva/i }));\r\n\r\n      expect(screen.getByText('Agrega múltiples emails separados por líneas')).toBeInTheDocument();\r\n      expect(screen.getByPlaceholderText(/usuario1@ejemplo.com/)).toBeInTheDocument();\r\n    });\r\n\r\n    it('debería validar que se agregue al menos un email', async () => {\r\n      render(<CourtesyInvitationsManagement {...mockProps} />);\r\n\r\n      await waitFor(() => {\r\n        expect(screen.getByText('Invitación Masiva')).toBeInTheDocument();\r\n      });\r\n\r\n      fireEvent.click(screen.getByRole('button', { name: /Invitación Masiva/i }));\r\n      fireEvent.click(screen.getByRole('button', { name: 'Crear Invitaciones' }));\r\n\r\n      expect(toast.error).toHaveBeenCalledWith('Debes agregar al menos un email');\r\n    });\r\n\r\n    it('debería procesar invitaciones masivas exitosamente', async () => {\r\n      // Mock respuesta exitosa para invitaciones masivas\r\n      mockFetch.mockResolvedValueOnce({\r\n        ok: true,\r\n        json: async () => ({\r\n          created: [mockInvitations[0], mockInvitations[1]],\r\n          errors: [],\r\n        }),\r\n      });\r\n\r\n      render(<CourtesyInvitationsManagement {...mockProps} />);\r\n\r\n      await waitFor(() => {\r\n        expect(screen.getByText('Invitación Masiva')).toBeInTheDocument();\r\n      });\r\n\r\n      // Abrir modal\r\n      fireEvent.click(screen.getByRole('button', { name: /Invitación Masiva/i }));\r\n\r\n      // Llenar textarea con múltiples emails\r\n      const textarea = screen.getByPlaceholderText(/usuario1@ejemplo.com/);\r\n      fireEvent.change(textarea, { \r\n        target: { value: 'user1@test.com, User One\\nuser2@test.com, User Two\\nuser3@test.com' }\r\n      });\r\n\r\n      // Enviar\r\n      fireEvent.click(screen.getByRole('button', { name: 'Crear Invitaciones' }));\r\n\r\n      await waitFor(() => {\r\n        expect(mockFetch).toHaveBeenLastCalledWith(\r\n          `/api/events/${mockProps.eventId}/invitations`,\r\n          {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({\r\n              invitations: [\r\n                { email: 'user1@test.com', name: 'User One' },\r\n                { email: 'user2@test.com', name: 'User Two' },\r\n                { email: 'user3@test.com', name: undefined },\r\n              ],\r\n            }),\r\n          }\r\n        );\r\n        expect(toast.success).toHaveBeenCalledWith('2 invitaciones creadas exitosamente');\r\n      });\r\n    });\r\n  });\r\n\r\n  describe('Exportar invitaciones', () => {\r\n    it('debería exportar invitaciones a CSV', async () => {\r\n      mockFetch.mockResolvedValueOnce({\r\n        ok: true,\r\n        json: async () => ({\r\n          event: { id: 'event-123', title: 'Test Event' },\r\n          invitations: mockInvitations,\r\n        }),\r\n      });\r\n\r\n      render(<CourtesyInvitationsManagement {...mockProps} />);\r\n\r\n      await waitFor(() => {\r\n        expect(screen.getByText('test1@example.com')).toBeInTheDocument();\r\n      });\r\n\r\n      fireEvent.click(screen.getByRole('button', { name: /Exportar/i }));\r\n\r\n      expect(mockCreateElement).toHaveBeenCalledWith('a');\r\n      expect(mockClick).toHaveBeenCalled();\r\n      expect(mockRemove).toHaveBeenCalled();\r\n    });\r\n\r\n    it('debería mostrar mensaje cuando no hay invitaciones para exportar', async () => {\r\n      mockFetch.mockResolvedValueOnce({\r\n        ok: true,\r\n        json: async () => ({\r\n          event: { id: 'event-123', title: 'Test Event' },\r\n          invitations: [],\r\n        }),\r\n      });\r\n\r\n      render(<CourtesyInvitationsManagement {...mockProps} />);\r\n\r\n      await waitFor(() => {\r\n        expect(screen.getByRole('button', { name: /Exportar/i })).toBeInTheDocument();\r\n      });\r\n\r\n      fireEvent.click(screen.getByRole('button', { name: /Exportar/i }));\r\n\r\n      expect(toast.error).toHaveBeenCalledWith('No hay invitaciones para exportar');\r\n    });\r\n  });\r\n});\r\n"],"version":3}