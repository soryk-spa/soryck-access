{"file":"C:\\Users\\Bilur\\Documents\\Development\\Next\\soryck-access\\src\\app\\api\\events\\[id]\\invitations\\route.ts","mappings":"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","names":[],"sources":["C:\\Users\\Bilur\\Documents\\Development\\Next\\soryck-access\\src\\app\\api\\events\\[id]\\invitations\\route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from \"next/server\";\r\nimport { prisma } from \"@/lib/prisma\";\r\nimport { getCurrentUser } from \"@/lib/auth\";\r\nimport { z } from \"zod\";\r\n\r\n\r\nconst createInvitationSchema = z.object({\r\n  invitedEmail: z.string().email(\"Email inválido\"),\r\n  invitedName: z.string().min(1, \"Nombre requerido\").optional(),\r\n  message: z.string().optional(),\r\n});\r\n\r\n\r\nconst bulkCreateInvitationSchema = z.object({\r\n  invitations: z.array(createInvitationSchema).min(1, \"Al menos una invitación es requerida\").max(50, \"Máximo 50 invitaciones por lote\"),\r\n});\r\n\r\ninterface RouteParams {\r\n  params: Promise<{\r\n    id: string;\r\n  }>;\r\n}\r\n\r\n\r\nexport async function GET(request: NextRequest, { params }: RouteParams) {\r\n  try {\r\n    const { id: eventId } = await params;\r\n    const user = await getCurrentUser();\r\n\r\n    if (!user) {\r\n      return NextResponse.json({ error: 'No autorizado' }, { status: 401 });\r\n    }\r\n\r\n    \r\n    const event = await prisma.event.findUnique({\r\n      where: { id: eventId },\r\n      include: {\r\n        organizer: true,\r\n      },\r\n    });\r\n\r\n    if (!event) {\r\n      return NextResponse.json({ error: 'Evento no encontrado' }, { status: 404 });\r\n    }\r\n\r\n    const isOwner = event.organizerId === user.id;\r\n    const isAdmin = user.role === 'ADMIN';\r\n\r\n    if (!isOwner && !isAdmin) {\r\n      return NextResponse.json({ error: 'No autorizado' }, { status: 403 });\r\n    }\r\n\r\n    \r\n    const invitations = await prisma.courtesyInvitation.findMany({\r\n      where: { eventId },\r\n      include: {\r\n        ticket: {\r\n          select: {\r\n            id: true,\r\n            qrCode: true,\r\n            isUsed: true,\r\n            usedAt: true,\r\n          },\r\n        },\r\n        creator: {\r\n          select: {\r\n            firstName: true,\r\n            lastName: true,\r\n            email: true,\r\n          },\r\n        },\r\n      },\r\n      orderBy: { createdAt: 'desc' },\r\n    });\r\n\r\n    \r\n    console.log('Invitations fetched:', invitations.length);\r\n    if (invitations.length > 0) {\r\n      console.log('Sample invitation:', JSON.stringify(invitations[0], null, 2));\r\n    }\r\n\r\n    return NextResponse.json({\r\n      event: {\r\n        id: event.id,\r\n        title: event.title,\r\n      },\r\n      invitations,\r\n    });\r\n\r\n  } catch (error) {\r\n    console.error(\"Error fetching courtesy invitations:\", error);\r\n    return NextResponse.json(\r\n      { error: \"Error interno del servidor\" },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport async function POST(request: NextRequest, { params }: RouteParams) {\r\n  try {\r\n    const { id: eventId } = await params;\r\n    const user = await getCurrentUser();\r\n\r\n    if (!user) {\r\n      return NextResponse.json({ error: 'No autorizado' }, { status: 401 });\r\n    }\r\n\r\n    \r\n    const event = await prisma.event.findUnique({\r\n      where: { id: eventId },\r\n      include: {\r\n        organizer: true,\r\n      },\r\n    });\r\n\r\n    if (!event) {\r\n      return NextResponse.json({ error: 'Evento no encontrado' }, { status: 404 });\r\n    }\r\n\r\n    const isOwner = event.organizerId === user.id;\r\n    const isAdmin = user.role === 'ADMIN';\r\n\r\n    if (!isOwner && !isAdmin) {\r\n      return NextResponse.json({ error: 'No autorizado' }, { status: 403 });\r\n    }\r\n\r\n    const body = await request.json();\r\n    \r\n    \r\n    let invitationsToCreate: Array<{\r\n      invitedEmail: string;\r\n      invitedName?: string;\r\n      message?: string;\r\n    }> = [];\r\n\r\n    if (body.invitations) {\r\n      \r\n      const validation = bulkCreateInvitationSchema.parse(body);\r\n      invitationsToCreate = validation.invitations;\r\n    } else {\r\n      \r\n      const validation = createInvitationSchema.parse(body);\r\n      invitationsToCreate = [validation];\r\n    }\r\n\r\n    \r\n    const existingEmails = await prisma.courtesyInvitation.findMany({\r\n      where: {\r\n        eventId,\r\n        invitedEmail: {\r\n          in: invitationsToCreate.map(inv => inv.invitedEmail.toLowerCase()),\r\n        },\r\n      },\r\n      select: { invitedEmail: true },\r\n    });\r\n\r\n    if (existingEmails.length > 0) {\r\n      const duplicateEmails = existingEmails.map(e => e.invitedEmail);\r\n      return NextResponse.json(\r\n        { \r\n          error: \"Algunos emails ya están invitados a este evento\",\r\n          duplicateEmails \r\n        },\r\n        { status: 400 }\r\n      );\r\n    }\r\n\r\n    \r\n    const createdInvitations = await prisma.$transaction(\r\n      invitationsToCreate.map((invitation) =>\r\n        prisma.courtesyInvitation.create({\r\n          data: {\r\n            eventId,\r\n            invitedEmail: invitation.invitedEmail.toLowerCase(),\r\n            invitedName: invitation.invitedName,\r\n            message: invitation.message,\r\n            createdBy: user.id,\r\n            invitationCode: generateInvitationCode(),\r\n            expiresAt: new Date(Date.now() + 30 * 24 * 60 * 60 * 1000), \r\n          },\r\n          include: {\r\n            creator: {\r\n              select: {\r\n                firstName: true,\r\n                lastName: true,\r\n                email: true,\r\n              },\r\n            },\r\n          },\r\n        })\r\n      )\r\n    );\r\n\r\n    return NextResponse.json({\r\n      message: `${createdInvitations.length} invitación(es) creada(s) exitosamente`,\r\n      invitations: createdInvitations,\r\n    }, { status: 201 });\r\n\r\n  } catch (error) {\r\n    if (error instanceof z.ZodError) {\r\n      return NextResponse.json(\r\n        { error: \"Datos inválidos\", details: error.issues },\r\n        { status: 400 }\r\n      );\r\n    }\r\n\r\n    console.error(\"Error creating courtesy invitations:\", error);\r\n    return NextResponse.json(\r\n      { error: \"Error interno del servidor\" },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n\r\n\r\nfunction generateInvitationCode(): string {\r\n  return Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15);\r\n}\r\n"],"version":3}