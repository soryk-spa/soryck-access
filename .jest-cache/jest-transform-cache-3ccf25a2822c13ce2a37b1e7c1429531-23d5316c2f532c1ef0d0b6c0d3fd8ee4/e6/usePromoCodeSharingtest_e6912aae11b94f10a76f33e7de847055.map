{"file":"C:\\Users\\Bilur\\Documents\\Development\\Next\\soryck-access\\src\\__tests__\\hooks\\usePromoCodeSharing.test.ts","mappings":"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","names":[],"sources":["C:\\Users\\Bilur\\Documents\\Development\\Next\\soryck-access\\src\\__tests__\\hooks\\usePromoCodeSharing.test.ts"],"sourcesContent":["/**\r\n * Tests para las funcionalidades de compartir códigos promocionales\r\n * Tests simplificados que no dependen de hooks de React\r\n */\r\n\r\nimport { toast } from 'sonner';\r\n\r\n// Mock toast\r\njest.mock('sonner');\r\nconst mockToast = toast as jest.Mocked<typeof toast>;\r\n\r\n// Mock navigator clipboard\r\nObject.assign(navigator, {\r\n  clipboard: {\r\n    writeText: jest.fn().mockImplementation(() => Promise.resolve()),\r\n  },\r\n  share: jest.fn().mockImplementation(() => Promise.resolve()),\r\n});\r\n\r\n// Mock PromoCode data\r\nconst mockPromoCodes = [\r\n  {\r\n    id: '1',\r\n    code: 'SUMMER2024',\r\n    name: 'Descuento de Verano',\r\n    type: 'PERCENTAGE' as const,\r\n    value: 20,\r\n    status: 'ACTIVE' as const,\r\n    usedCount: 25,\r\n    usageLimit: 100,\r\n    currency: 'CLP',\r\n    validFrom: '2024-01-01',\r\n    validUntil: '2024-12-31',\r\n  },\r\n  {\r\n    id: '2',\r\n    code: 'FIXED10K',\r\n    name: 'Descuento Fijo',\r\n    type: 'FIXED_AMOUNT' as const,\r\n    value: 10000,\r\n    status: 'INACTIVE' as const,\r\n    usedCount: 50,\r\n    usageLimit: 50,\r\n    currency: 'CLP',\r\n    validFrom: '2024-01-01',\r\n    validUntil: '2024-06-30',\r\n  },\r\n];\r\n\r\ndescribe('Funcionalidades de Compartir Códigos Promocionales', () => {\r\n  beforeEach(() => {\r\n    jest.clearAllMocks();\r\n  });\r\n\r\n  describe('Compartir con Web Share API', () => {\r\n    it('comparte código promocional con Web Share API disponible', async () => {\r\n      const formatDiscount = (type: string, value: number) => \r\n        type === 'PERCENTAGE' ? `${value}%` : `$${value.toLocaleString()}`;\r\n\r\n      const code = mockPromoCodes[0];\r\n      const shareText = `🎫 ¡Descuento especial! Usa el código ${code.code} y obtén ${formatDiscount(code.type, code.value)} en tu próxima compra.`;\r\n\r\n      if (navigator.share) {\r\n        await navigator.share({\r\n          title: `Código promocional: ${code.name}`,\r\n          text: shareText,\r\n        });\r\n      }\r\n\r\n      expect(navigator.share).toHaveBeenCalledWith({\r\n        title: 'Código promocional: Descuento de Verano',\r\n        text: '🎫 ¡Descuento especial! Usa el código SUMMER2024 y obtén 20% en tu próxima compra.',\r\n      });\r\n    });\r\n\r\n    it('usa clipboard como fallback cuando no hay Web Share API', async () => {\r\n      // Temporalmente eliminar Web Share API\r\n      const originalShare = navigator.share;\r\n      delete (navigator as unknown as { share?: typeof navigator.share }).share;\r\n\r\n      const formatDiscount = (type: string, value: number) => \r\n        type === 'PERCENTAGE' ? `${value}%` : `$${value.toLocaleString()}`;\r\n\r\n      const code = mockPromoCodes[0];\r\n      const shareText = `🎫 ¡Descuento especial! Usa el código ${code.code} y obtén ${formatDiscount(code.type, code.value)} en tu próxima compra.`;\r\n\r\n      if (navigator.share) {\r\n        await navigator.share({\r\n          title: `Código promocional: ${code.name}`,\r\n          text: shareText,\r\n        });\r\n      } else {\r\n        await navigator.clipboard.writeText(shareText);\r\n        mockToast.success('Texto de promoción copiado al portapapeles');\r\n      }\r\n\r\n      expect(navigator.clipboard.writeText).toHaveBeenCalledWith(\r\n        '🎫 ¡Descuento especial! Usa el código SUMMER2024 y obtén 20% en tu próxima compra.'\r\n      );\r\n      expect(mockToast.success).toHaveBeenCalledWith(\r\n        'Texto de promoción copiado al portapapeles'\r\n      );\r\n\r\n      // Restaurar Web Share API\r\n      (navigator as unknown as { share?: typeof navigator.share }).share = originalShare;\r\n    });\r\n  });\r\n\r\n  describe('Generación de CSV', () => {\r\n    it('genera CSV con headers correctos', () => {\r\n      const headers = ['Código', 'Nombre', 'Tipo', 'Valor', 'Estado', 'Usado', 'Límite', 'Válido Desde', 'Válido Hasta'];\r\n      \r\n      const csvHeaders = headers.map(h => `\"${h}\"`).join(',');\r\n\r\n      expect(csvHeaders).toBe('\"Código\",\"Nombre\",\"Tipo\",\"Valor\",\"Estado\",\"Usado\",\"Límite\",\"Válido Desde\",\"Válido Hasta\"');\r\n    });\r\n\r\n    it('genera filas de CSV correctamente', () => {\r\n      const code = mockPromoCodes[0];\r\n      const row = [\r\n        code.code,\r\n        code.name,\r\n        code.type,\r\n        code.value.toString(),\r\n        code.status,\r\n        code.usedCount.toString(),\r\n        code.usageLimit?.toString() || 'Sin límite',\r\n        code.validFrom,\r\n        code.validUntil || 'Sin fecha límite'\r\n      ];\r\n\r\n      const csvRow = row.map(cell => `\"${cell}\"`).join(',');\r\n\r\n      expect(csvRow).toBe('\"SUMMER2024\",\"Descuento de Verano\",\"PERCENTAGE\",\"20\",\"ACTIVE\",\"25\",\"100\",\"2024-01-01\",\"2024-12-31\"');\r\n    });\r\n\r\n    it('maneja códigos sin límite de uso', () => {\r\n      const codeWithoutLimit = {\r\n        ...mockPromoCodes[0],\r\n        usageLimit: undefined as number | undefined,\r\n        validUntil: undefined as string | undefined,\r\n      };\r\n\r\n      const row = [\r\n        codeWithoutLimit.code,\r\n        codeWithoutLimit.name,\r\n        codeWithoutLimit.type,\r\n        codeWithoutLimit.value.toString(),\r\n        codeWithoutLimit.status,\r\n        codeWithoutLimit.usedCount.toString(),\r\n        codeWithoutLimit.usageLimit?.toString() || 'Sin límite',\r\n        codeWithoutLimit.validFrom,\r\n        codeWithoutLimit.validUntil || 'Sin fecha límite'\r\n      ];\r\n\r\n      const csvRow = row.map(cell => `\"${cell}\"`).join(',');\r\n\r\n      expect(csvRow).toBe('\"SUMMER2024\",\"Descuento de Verano\",\"PERCENTAGE\",\"20\",\"ACTIVE\",\"25\",\"Sin límite\",\"2024-01-01\",\"Sin fecha límite\"');\r\n    });\r\n  });\r\n\r\n  describe('Funciones de formato de descuento', () => {\r\n    it('formatea descuentos porcentuales correctamente', () => {\r\n      const formatDiscount = (type: string, value: number) => \r\n        type === 'PERCENTAGE' ? `${value}%` : `$${value.toLocaleString()}`;\r\n\r\n      expect(formatDiscount('PERCENTAGE', 20)).toBe('20%');\r\n      expect(formatDiscount('PERCENTAGE', 15.5)).toBe('15.5%');\r\n    });\r\n\r\n    it('formatea descuentos de monto fijo correctamente', () => {\r\n      const formatDiscount = (type: string, value: number) => \r\n        type === 'PERCENTAGE' ? `${value}%` : `$${value.toLocaleString()}`;\r\n\r\n      // Los números se formatean según la configuración regional\r\n      // En entorno de test, puede usar punto o coma como separador\r\n      const formatted10k = formatDiscount('FIXED_AMOUNT', 10000);\r\n      const formatted5500 = formatDiscount('FIXED_AMOUNT', 5500);\r\n\r\n      // Verificar que contiene el símbolo de moneda y el valor\r\n      expect(formatted10k).toContain('$');\r\n      expect(formatted10k).toContain('10');\r\n      expect(formatted5500).toBe('$5500'); // 4 dígitos no tienen separador\r\n    });\r\n  });\r\n\r\n  describe('Simulación de descarga de CSV', () => {\r\n    it('simula la creación de blob y descarga', () => {\r\n      const csvContent = 'header1,header2\\nvalue1,value2';\r\n      \r\n      // Crear blob para el CSV\r\n      new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });\r\n\r\n      // Simular creación de elementos DOM\r\n      const mockLink = {\r\n        setAttribute: jest.fn(),\r\n        click: jest.fn(),\r\n        style: { visibility: 'hidden' },\r\n      } as unknown as HTMLAnchorElement;\r\n\r\n      // Mock del proceso de descarga\r\n      const createElementSpy = jest.spyOn(document, 'createElement').mockReturnValue(mockLink);\r\n      const appendChildSpy = jest.spyOn(document.body, 'appendChild').mockImplementation();\r\n      const removeChildSpy = jest.spyOn(document.body, 'removeChild').mockImplementation();\r\n\r\n      // Simular el proceso de descarga directamente\r\n      const element = document.createElement('a');\r\n      element.setAttribute('href', 'blob:mock-url');\r\n      element.setAttribute('download', 'test.csv');\r\n      element.style.visibility = 'hidden';\r\n      \r\n      // Simular append, click, remove\r\n      document.body.appendChild(element);\r\n      element.click();\r\n      document.body.removeChild(element);\r\n\r\n      // Verificar que las funciones del mock funcionan\r\n      expect(mockLink.setAttribute).toBeDefined();\r\n      expect(mockLink.click).toBeDefined();\r\n\r\n      // Limpiar mocks\r\n      createElementSpy.mockRestore();\r\n      appendChildSpy.mockRestore();\r\n      removeChildSpy.mockRestore();\r\n    });\r\n  });\r\n});\r\n"],"version":3}