8f5515bd0e68df4670311b966f45ec39
"use strict";
"use client";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.CloseIcon = void 0;
exports.EventsExpandableCards = EventsExpandableCards;
const jsx_runtime_1 = require("react/jsx-runtime");
const image_1 = __importDefault(require("next/image"));
const link_1 = __importDefault(require("next/link"));
const react_1 = __importStar(require("react"));
const react_2 = require("motion/react");
const use_outside_click_1 = require("@/hooks/use-outside-click");
function EventsExpandableCards({ events }) {
    const transformEventsToCards = (evts) => evts.map((e) => {
        var _a;
        return ({
            title: e.title,
            description: e.category.name,
            location: e.location,
            date: new Date(e.startDate).toLocaleDateString('es-ES', {
                weekday: 'short',
                day: 'numeric',
                month: 'short'
            }),
            time: new Date(e.startDate).toLocaleTimeString('es-ES', {
                hour: '2-digit',
                minute: '2-digit'
            }),
            src: (_a = e.imageUrl) !== null && _a !== void 0 ? _a : "/sorykpass_1.jpg",
            ctaText: e.isFree ? "Gratis" : `$${e.price.toLocaleString()}`,
            ctaLink: `/events/${e.id}`,
            capacity: e.capacity,
            ticketsSold: e._count.tickets,
            organizer: `${e.organizer.firstName} ${e.organizer.lastName}`.trim(),
            content: () => ((0, jsx_runtime_1.jsxs)("div", { className: "space-y-4", children: [(0, jsx_runtime_1.jsx)("p", { className: "text-neutral-700 dark:text-neutral-300", children: e.description || "DescripciÃ³n del evento no disponible." }), (0, jsx_runtime_1.jsxs)("div", { className: "grid grid-cols-1 md:grid-cols-2 gap-4 text-sm", children: [(0, jsx_runtime_1.jsxs)("div", { className: "space-y-2", children: [(0, jsx_runtime_1.jsxs)("div", { className: "flex items-center gap-2", children: [(0, jsx_runtime_1.jsx)("span", { className: "font-semibold text-neutral-800 dark:text-neutral-200", children: "\uD83D\uDCC5 Fecha:" }), (0, jsx_runtime_1.jsx)("span", { className: "text-neutral-600 dark:text-neutral-400", children: new Date(e.startDate).toLocaleDateString('es-ES', {
                                                    weekday: 'long',
                                                    year: 'numeric',
                                                    month: 'long',
                                                    day: 'numeric'
                                                }) })] }), (0, jsx_runtime_1.jsxs)("div", { className: "flex items-center gap-2", children: [(0, jsx_runtime_1.jsx)("span", { className: "font-semibold text-neutral-800 dark:text-neutral-200", children: "\u23F0 Hora:" }), (0, jsx_runtime_1.jsx)("span", { className: "text-neutral-600 dark:text-neutral-400", children: new Date(e.startDate).toLocaleTimeString('es-ES', {
                                                    hour: '2-digit',
                                                    minute: '2-digit'
                                                }) })] }), (0, jsx_runtime_1.jsxs)("div", { className: "flex items-center gap-2", children: [(0, jsx_runtime_1.jsx)("span", { className: "font-semibold text-neutral-800 dark:text-neutral-200", children: "\uD83D\uDCCD Ubicaci\u00F3n:" }), (0, jsx_runtime_1.jsx)("span", { className: "text-neutral-600 dark:text-neutral-400", children: e.location })] })] }), (0, jsx_runtime_1.jsxs)("div", { className: "space-y-2", children: [(0, jsx_runtime_1.jsxs)("div", { className: "flex items-center gap-2", children: [(0, jsx_runtime_1.jsx)("span", { className: "font-semibold text-neutral-800 dark:text-neutral-200", children: "\uD83D\uDCB0 Precio:" }), (0, jsx_runtime_1.jsx)("span", { className: "text-neutral-600 dark:text-neutral-400", children: e.isFree ? "Gratis" : `$${e.price.toLocaleString()}` })] }), (0, jsx_runtime_1.jsxs)("div", { className: "flex items-center gap-2", children: [(0, jsx_runtime_1.jsx)("span", { className: "font-semibold text-neutral-800 dark:text-neutral-200", children: "\uD83D\uDC65 Capacidad:" }), (0, jsx_runtime_1.jsxs)("span", { className: "text-neutral-600 dark:text-neutral-400", children: [e._count.tickets, "/", e.capacity, " entradas"] })] }), (0, jsx_runtime_1.jsxs)("div", { className: "flex items-center gap-2", children: [(0, jsx_runtime_1.jsx)("span", { className: "font-semibold text-neutral-800 dark:text-neutral-200", children: "\uD83C\uDFF7\uFE0F Categor\u00EDa:" }), (0, jsx_runtime_1.jsx)("span", { className: "text-neutral-600 dark:text-neutral-400", children: e.category.name })] })] })] }), (0, jsx_runtime_1.jsx)("div", { className: "pt-2 border-t border-neutral-200 dark:border-neutral-700", children: (0, jsx_runtime_1.jsxs)("div", { className: "flex items-center gap-2", children: [(0, jsx_runtime_1.jsx)("span", { className: "font-semibold text-neutral-800 dark:text-neutral-200", children: "\uD83D\uDC64 Organizador:" }), (0, jsx_runtime_1.jsx)("span", { className: "text-neutral-600 dark:text-neutral-400", children: `${e.organizer.firstName} ${e.organizer.lastName}`.trim() || e.organizer.email })] }) })] })),
        });
    });
    const cards = events && events.length > 0 ? transformEventsToCards(events) : [];
    const [active, setActive] = (0, react_1.useState)(null);
    const ref = (0, react_1.useRef)(null);
    const id = (0, react_1.useId)();
    (0, react_1.useEffect)(() => {
        function onKeyDown(event) {
            if (event.key === "Escape") {
                setActive(false);
            }
        }
        if (active && typeof active === "object") {
            document.body.style.overflow = "hidden";
        }
        else {
            document.body.style.overflow = "auto";
        }
        window.addEventListener("keydown", onKeyDown);
        return () => window.removeEventListener("keydown", onKeyDown);
    }, [active]);
    (0, use_outside_click_1.useOutsideClick)(ref, () => setActive(null));
    return ((0, jsx_runtime_1.jsxs)(jsx_runtime_1.Fragment, { children: [(0, jsx_runtime_1.jsx)(react_2.AnimatePresence, { children: active && typeof active === "object" && ((0, jsx_runtime_1.jsx)(react_2.motion.div, { initial: { opacity: 0 }, animate: { opacity: 1 }, exit: { opacity: 0 }, className: "fixed inset-0 bg-black/20 h-full w-full z-10" })) }), (0, jsx_runtime_1.jsx)(react_2.AnimatePresence, { children: active && typeof active === "object" ? ((0, jsx_runtime_1.jsxs)("div", { className: "fixed inset-0  grid place-items-center z-[100]", children: [(0, jsx_runtime_1.jsx)(react_2.motion.button, { layout: true, initial: {
                                opacity: 0,
                            }, animate: {
                                opacity: 1,
                            }, exit: {
                                opacity: 0,
                                transition: {
                                    duration: 0.05,
                                },
                            }, className: "flex absolute top-2 right-2 lg:hidden items-center justify-center bg-white rounded-full h-6 w-6", onClick: () => setActive(null), children: (0, jsx_runtime_1.jsx)(exports.CloseIcon, {}) }, `button-${active.title}-${id}`), (0, jsx_runtime_1.jsxs)(react_2.motion.div, { layoutId: `card-${active.title}-${id}`, ref: ref, className: "w-full max-w-[500px]  h-full md:h-fit md:max-h-[90%]  flex flex-col bg-white dark:bg-neutral-900 sm:rounded-3xl overflow-hidden", children: [(0, jsx_runtime_1.jsx)(react_2.motion.div, { layoutId: `image-${active.title}-${id}`, children: (0, jsx_runtime_1.jsx)(image_1.default, { width: 200, height: 200, src: active.src, alt: active.title, className: "w-full h-80 lg:h-80 sm:rounded-tr-lg sm:rounded-tl-lg object-cover object-top" }) }), (0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsxs)("div", { className: "flex justify-between items-start p-4", children: [(0, jsx_runtime_1.jsxs)("div", { className: "", children: [(0, jsx_runtime_1.jsx)(react_2.motion.h3, { layoutId: `title-${active.title}-${id}`, className: "font-medium text-neutral-700 dark:text-neutral-200 text-base mb-2", children: active.title }), (0, jsx_runtime_1.jsx)(react_2.motion.p, { layoutId: `description-${active.description}-${id}`, className: "text-neutral-600 dark:text-neutral-400 text-sm", children: active.description })] }), (0, jsx_runtime_1.jsx)(react_2.motion.a, { layout: true, initial: { opacity: 0 }, animate: { opacity: 1 }, exit: { opacity: 0 }, href: active.ctaLink, target: "_blank", className: "px-4 py-3 text-sm rounded-full font-bold bg-green-500 hover:bg-green-600 text-white transition-colors", children: active.ctaText })] }), (0, jsx_runtime_1.jsx)("div", { className: "pt-4 relative px-4", children: (0, jsx_runtime_1.jsx)(react_2.motion.div, { layout: true, initial: { opacity: 0 }, animate: { opacity: 1 }, exit: { opacity: 0 }, className: "text-neutral-600 text-xs md:text-sm lg:text-base h-40 md:h-fit pb-10 flex flex-col items-start gap-4 overflow-auto dark:text-neutral-400 [mask:linear-gradient(to_bottom,white,white,transparent)] [scrollbar-width:none] [-ms-overflow-style:none] [-webkit-overflow-scrolling:touch]", children: typeof active.content === "function"
                                                    ? active.content()
                                                    : active.content }) })] })] })] })) : null }), cards.length > 0 ? ((0, jsx_runtime_1.jsx)("ul", { className: "max-w-2xl mx-auto w-full grid grid-cols-1 md:grid-cols-2 items-start gap-4", children: cards.map((card) => ((0, jsx_runtime_1.jsx)(react_2.motion.div, { layoutId: `card-${card.title}-${id}`, onClick: () => setActive(card), className: "p-4 flex flex-col  hover:bg-neutral-50 dark:hover:bg-neutral-800 rounded-xl cursor-pointer", children: (0, jsx_runtime_1.jsxs)("div", { className: "flex gap-4 flex-col  w-full", children: [(0, jsx_runtime_1.jsx)(react_2.motion.div, { layoutId: `image-${card.title}-${id}`, children: (0, jsx_runtime_1.jsx)(image_1.default, { width: 400, height: 240, src: card.src, alt: card.title, className: "h-60 w-full  rounded-lg object-cover object-top" }) }), (0, jsx_runtime_1.jsxs)("div", { className: "flex justify-center items-center flex-col", children: [(0, jsx_runtime_1.jsx)(react_2.motion.h3, { layoutId: `title-${card.title}-${id}`, className: "font-medium text-neutral-800 dark:text-neutral-200 text-center text-base mb-1", children: card.title }), (0, jsx_runtime_1.jsx)(react_2.motion.p, { layoutId: `description-${card.description}-${id}`, className: "text-neutral-600 dark:text-neutral-400 text-center text-sm mb-2", children: card.description }), card.date && ((0, jsx_runtime_1.jsxs)("div", { className: "text-xs text-neutral-500 dark:text-neutral-500 text-center space-y-1", children: [(0, jsx_runtime_1.jsxs)("div", { className: "flex items-center justify-center gap-1", children: [(0, jsx_runtime_1.jsxs)("span", { children: ["\uD83D\uDCC5 ", card.date] }), card.time && (0, jsx_runtime_1.jsxs)("span", { children: ["\u2022 \u23F0 ", card.time] })] }), card.location && ((0, jsx_runtime_1.jsx)("div", { className: "flex items-center justify-center gap-1", children: (0, jsx_runtime_1.jsxs)("span", { children: ["\uD83D\uDCCD ", card.location] }) })), card.ticketsSold !== undefined && card.capacity && ((0, jsx_runtime_1.jsx)("div", { className: "flex items-center justify-center gap-1", children: (0, jsx_runtime_1.jsxs)("span", { children: ["\uD83C\uDFAB ", card.ticketsSold, "/", card.capacity] }) }))] }))] })] }) }, card.title))) })) : ((0, jsx_runtime_1.jsx)("div", { className: "max-w-2xl mx-auto w-full text-center py-12", children: (0, jsx_runtime_1.jsxs)("div", { className: "bg-neutral-50 dark:bg-neutral-800 rounded-xl p-8", children: [(0, jsx_runtime_1.jsx)("div", { className: "text-6xl mb-4", children: "\uD83C\uDFAD" }), (0, jsx_runtime_1.jsx)("h3", { className: "text-xl font-medium text-neutral-800 dark:text-neutral-200 mb-2", children: "No hay eventos disponibles" }), (0, jsx_runtime_1.jsx)("p", { className: "text-neutral-600 dark:text-neutral-400 mb-4", children: "A\u00FAn no se han creado eventos en la plataforma. \u00A1S\u00E9 el primero en crear uno!" }), (0, jsx_runtime_1.jsx)(link_1.default, { href: "/events/create", className: "inline-flex items-center gap-2 px-4 py-2 bg-green-500 hover:bg-green-600 text-white rounded-lg transition-colors", children: "\u2728 Crear evento" })] }) }))] }));
}
const CloseIcon = () => {
    return ((0, jsx_runtime_1.jsxs)(react_2.motion.svg, { initial: {
            opacity: 0,
        }, animate: {
            opacity: 1,
        }, exit: {
            opacity: 0,
            transition: {
                duration: 0.05,
            },
        }, xmlns: "http://www.w3.org/2000/svg", width: "24", height: "24", viewBox: "0 0 24 24", fill: "none", stroke: "currentColor", strokeWidth: "2", strokeLinecap: "round", strokeLinejoin: "round", className: "h-4 w-4 text-black", children: [(0, jsx_runtime_1.jsx)("path", { stroke: "none", d: "M0 0h24v24H0z", fill: "none" }), (0, jsx_runtime_1.jsx)("path", { d: "M18 6l-12 12" }), (0, jsx_runtime_1.jsx)("path", { d: "M6 6l12 12" })] }));
};
exports.CloseIcon = CloseIcon;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,