{"file":"C:\\Users\\Bilur\\Documents\\Development\\Next\\soryck-access\\src\\app\\api\\user\\profile\\route.ts","mappings":";;AAKA,kBAqEC;AA1ED,wCAA0C;AAC1C,qCAA2C;AAC3C,uCAA0C;AAC1C,iDAA2C;AAEpC,KAAK,UAAU,GAAG;IACvB,IAAI,CAAC;QACH,MAAM,EAAE,MAAM,EAAE,GAAG,MAAM,IAAA,aAAI,GAAE,CAAA;QAE/B,IAAI,CAAC,MAAM,EAAE,CAAC;YACZ,OAAO,qBAAY,CAAC,IAAI,CACtB,EAAE,KAAK,EAAE,wBAAwB,EAAE,EACnC,EAAE,MAAM,EAAE,GAAG,EAAE,CAChB,CAAA;QACH,CAAC;QAED,MAAM,KAAK,GAAG,oBAAY,CAAC,WAAW,EAAE,CAAA;QAGxC,MAAM,UAAU,GAAG,MAAM,KAAK,CAAC,eAAe,CAAC,MAAM,CAAC,CAAA;QACtD,IAAI,UAAU,EAAE,CAAC;YACf,OAAO,qBAAY,CAAC,IAAI,CAAC;gBACvB,IAAI,EAAE;oBACJ,EAAE,EAAE,UAAU,CAAC,EAAE;oBACjB,KAAK,EAAE,UAAU,CAAC,KAAK;oBACvB,SAAS,EAAE,UAAU,CAAC,SAAS;oBAC/B,QAAQ,EAAE,UAAU,CAAC,QAAQ;oBAC7B,IAAI,EAAE,UAAU,CAAC,IAAI;iBACtB;aACF,CAAC,CAAA;QACJ,CAAC;QAGD,MAAM,IAAI,GAAG,MAAM,IAAA,qBAAc,GAAE,CAAA;QAEnC,IAAI,CAAC,IAAI,EAAE,CAAC;YACV,OAAO,qBAAY,CAAC,IAAI,CACtB,EAAE,KAAK,EAAE,uBAAuB,EAAE,EAClC,EAAE,MAAM,EAAE,GAAG,EAAE,CAChB,CAAA;QACH,CAAC;QAGD,MAAM,QAAQ,GAAG;YACf,EAAE,EAAE,IAAI,CAAC,EAAE;YACX,OAAO,EAAE,IAAI,CAAC,OAAO;YACrB,KAAK,EAAE,IAAI,CAAC,KAAK;YACjB,SAAS,EAAE,IAAI,CAAC,SAAS,IAAI,SAAS;YACtC,QAAQ,EAAE,IAAI,CAAC,QAAQ,IAAI,SAAS;YACpC,IAAI,EAAE,IAAI,CAAC,IAAI;SAChB,CAAA;QAGD,MAAM,KAAK,CAAC,YAAY,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAA;QAE1C,OAAO,qBAAY,CAAC,IAAI,CAAC;YACvB,IAAI,EAAE;gBACJ,EAAE,EAAE,IAAI,CAAC,EAAE;gBACX,KAAK,EAAE,IAAI,CAAC,KAAK;gBACjB,SAAS,EAAE,IAAI,CAAC,SAAS;gBACzB,QAAQ,EAAE,IAAI,CAAC,QAAQ;gBACvB,IAAI,EAAE,IAAI,CAAC,IAAI;gBACf,QAAQ,EAAE,IAAI,CAAC,QAAQ;gBACvB,SAAS,EAAE,IAAI,CAAC,SAAS;aAC1B;SACF,CAAC,CAAA;IAEJ,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,OAAO,CAAC,KAAK,CAAC,8BAA8B,EAAE,KAAK,CAAC,CAAA;QACpD,OAAO,qBAAY,CAAC,IAAI,CACtB,EAAE,KAAK,EAAE,4BAA4B,EAAE,EACvC,EAAE,MAAM,EAAE,GAAG,EAAE,CAChB,CAAA;IACH,CAAC;AACH,CAAC","names":[],"sources":["C:\\Users\\Bilur\\Documents\\Development\\Next\\soryck-access\\src\\app\\api\\user\\profile\\route.ts"],"sourcesContent":["import { NextResponse } from 'next/server'\r\nimport { getCurrentUser } from '@/lib/auth'\r\nimport { CacheService } from '@/lib/redis'\r\nimport { auth } from '@clerk/nextjs/server'\r\n\r\nexport async function GET() {\r\n  try {\r\n    const { userId } = await auth()\r\n    \r\n    if (!userId) {\r\n      return NextResponse.json(\r\n        { error: 'Usuario no autenticado' },\r\n        { status: 401 }\r\n      )\r\n    }\r\n\r\n    const cache = CacheService.getInstance()\r\n\r\n    \r\n    const cachedUser = await cache.getUserFullData(userId)\r\n    if (cachedUser) {\r\n      return NextResponse.json({\r\n        user: {\r\n          id: cachedUser.id,\r\n          email: cachedUser.email,\r\n          firstName: cachedUser.firstName,\r\n          lastName: cachedUser.lastName,\r\n          role: cachedUser.role,\r\n        }\r\n      })\r\n    }\r\n\r\n    \r\n    const user = await getCurrentUser()\r\n    \r\n    if (!user) {\r\n      return NextResponse.json(\r\n        { error: 'Usuario no encontrado' },\r\n        { status: 404 }\r\n      )\r\n    }\r\n\r\n    \r\n    const userData = {\r\n      id: user.id,\r\n      clerkId: user.clerkId,\r\n      email: user.email,\r\n      firstName: user.firstName || undefined,\r\n      lastName: user.lastName || undefined,\r\n      role: user.role,\r\n    }\r\n\r\n    \r\n    await cache.setUserBatch(userId, userData)\r\n\r\n    return NextResponse.json({\r\n      user: {\r\n        id: user.id,\r\n        email: user.email,\r\n        firstName: user.firstName,\r\n        lastName: user.lastName,\r\n        role: user.role,\r\n        imageUrl: user.imageUrl,\r\n        createdAt: user.createdAt\r\n      }\r\n    })\r\n\r\n  } catch (error) {\r\n    console.error('Error fetching user profile:', error)\r\n    return NextResponse.json(\r\n      { error: 'Error interno del servidor' },\r\n      { status: 500 }\r\n    )\r\n  }\r\n}"],"version":3}